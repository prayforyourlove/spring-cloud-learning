# zuul 访问  ip+zuul的port / 服务名/服务路径
spring:
  application:
    name: api-gateway-api
server:
  port: 886
eureka:
  client:
    register-with-eureka: true #是否向服务注册中心注册自己
    fetch-registry: true #是否检索服务
    service-url:
      defaultZone: http://user:password@localhost:8761/eureka #服务注册路径
  instance:
    prefer-ip-address: true  #是否使用ip地址作为标识主机名
      #自定义配置主机名
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
      #eureka客户端发送心跳所需的频率（以秒为单位） 默认为30秒一次
    lease-renewal-interval-in-seconds: 30


#  # zuul.ignoredServices 排除代理的服务   '*' 为排除所有服务 除(配置的service-provider-user)
#  # 若想指定的话 则配置对应的服务名
##  ignoredServices: '*'
#  routes:
#    #即http://localhost:886/service-provider-user/simple/1 改为http://localhost:886/user/simple/1
     #备注: /** 为as an ant-style pattern  "/user/*" only matches one level, but "/user/**" matches hierarchically.
#    service-provider-user: /user/**

#zuul:
#  prefix: /api
#  strip-prefix: true
#  zuul.stripPrefix specifically applies to zuul.prefix. 针对全局
#  zuul.routes.<route>.stripPrefix applies to zuul.routes.<route>.path 针对指定服务
      #这里的配置表示，访问/baidu/** 直接重定向到http://www.baidu.com
#      zuul.routes.baidu.path=/baidu/**
#      zuul.routes.baidu.url=http://www.baidu.com
#      #反响代理配置
#      #user服务直接访问地址为:  http://192.168.10.153:880/simple/list
#      #当stripPrefix=true的时候 （http://127.0.0.1:886/user/simple/list -> http://192.168.10.153:880/simple/list）
#      #当stripPrefix=false的时候（http://127.0.0.1:886/user/simple/list -> http://192.168.1.100:8080/user/simple/list
#                                  false 则导致apiGate访问user服务 将/user路径 添加到user服务ip端口之后
#      zuul.routes.userapi.path=/user/**
#      zuul.routes.userapi.stripPrefix=false
#      zuul.routes.userapi.url: http://192.168.10.153:880/
#      #url重写配置
#      #这里的配置，相当于访问/index/** 会直接渲染/home的请求内容(和直接请求/home效果一样), url地址不变
#      zuul.routes.index.path=/index/**
#      zuul.routes.index.url=forward:/home

zuul:
  routes:
    provider-user:  # provider-user该值可以随意取名 如abc, 但要唯一
      stripPrefix: true
      path: /user/**  #serviceId的服务访问地址
      sensitiveHeaders:  # 默认值为"Cookie", "Set-Cookie", "Authorization"  zuul将其拦截 防止传入downSream
      serviceId: service-provider-user #serviceId为eureka的服务id
#      后端的位置可以被指定为“serviceId”（用于来自发现的服务）或“url”（用于物理位置)
#      url不会作为HystrixCommand执行，也不会使用Ribbon对多个URL进行负载均衡。要实现此目的，您可以使用静态服务器列表指定serviceId
#      url: http://192.168.10.153:886/
#    legacy: # 其他服务访问路径为/**
#      path: /**
  ignore-security-headers: false

#Another method is specifiying a service-route and configure a Ribbon client for the serviceId (this requires disabling Eureka support in Ribbon
#指定服务路由并为serviceId配置Ribbon客户端（这需要禁用Ribbon中的Eureka支持 请查看文档
#文档地址:https://cloud.spring.io/spring-cloud-static/Edgware.SR5/single/spring-cloud.html#netflix-zuul-reverse-proxy
